{"version":3,"sources":["Header.js","SearchArea.js","BookCard.js","BookList.js","Books.js","App.js","serviceWorker.js","index.js"],"names":["Header","src","alt","SearchArea","props","className","onSubmit","searchBook","action","onChange","handleSearch","type","placeholder","value","sort","handleSort","disabled","BookCard","title","image","style","maxHeight","maxWidth","href","previewLink","author","published","substring","publisher","BookList","books","map","book","i","volumeInfo","key","undefined","imageLinks","thumbnail","authors","publishedDate","Books","e","preventDefault","request","get","query","q","state","searchField","then","data","cleanData","setState","target","console","log","body","items","hasOwnProperty","filteredBooks","this","a","b","parseInt","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05d768ab.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nconst Header = () => {\n    return (\n        <header >\n            <h1>One Champ</h1>\n            <img src=\"Fbook.png\" alt=\"logo\" />\n\n            <span></span>\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport './App.css';\nconst SearchArea = (props) => {\n    return(\n        <div className=\"search-area\">\n            <form onSubmit={props.searchBook} action=\"\">\n                <input onChange={props.handleSearch} type=\"text\" placeholder=\"Search Books\"/>\n                <button type=\"submit\">Search</button>\n                <select value={props.sort} onChange={props.handleSort} >\n                  <option disabled value=\"Sort\">Sort</option>\n                  <option value=\"Newest\">Newest</option>\n                  <option value=\"Oldest\">Oldest</option>\n              </select>\n            </form>\n        </div>\n    )\n}\nexport default SearchArea;","import React from 'react';\n\nconst BookCard = (props) => {\n    return (\n        <div className=\"card \">\n            <div className=\"card-header card-header-1\">{props.title}</div>\n            <div className=\"card-body\">\n                <div className=\"product-img\">\n                    <img src={props.image} className=\"mb-3\"\n                        style={{ maxHeight: \"100%\", maxWidth: \"60%\" }} />\n                </div>\n\n                <a className=\"stretched-link\" href={props.previewLink}>\n                    <p className=\"card-p  mt-2\">Author: {props.author}</p>\n                    <p className=\"card-p black-10\">Published Date: {props.published === '0000' ? 'Not available' : props.published.substring(0, 4)}</p>\n                    <p className=\"black-9\">Publisher: {props.publisher}</p>\n                </a>\n            </div>\n        </div>\n    )\n}\nexport default BookCard;\n","import React from 'react';\nimport BookCard from './BookCard';\n\nconst BookList = (props) =>{ \n    return(\n      <div className=\"list\">\n         {\n             props.books.map((book,i) =>{\n             \n                 return <BookCard  \n                 previewLink={book.volumeInfo.previewLink}\n                 key={i}\n                 \n                 image={ book.volumeInfo.imageLinks === undefined\n                    ? \"\"\n                    : `${book.volumeInfo.imageLinks.thumbnail}`}\n                 title={book.volumeInfo.title}\n                 author={book.volumeInfo.authors}\n                 published={book.volumeInfo.publishedDate}\n                 publisher={book.volumeInfo.publisher}\n                 />\n\n             })\n         }\n      </div>\n    )\n}\nexport default BookList;","import React, { Component } from 'react';\nimport './App.css';\nimport SearchArea from './SearchArea';\nimport request from 'superagent';\nimport BookList from './BookList';\n\nclass Books extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      searchField: 'javascript',\n      sort: ''\n    }\n  }\n\n  searchBook = (e) => {\n    e.preventDefault();\n    request.get(\"https://www.googleapis.com/books/v1/volumes\")\n      .query({ q: this.state.searchField })\n      .then((data) => {\n        //console.log(data);\n        const cleanData = this.cleanData(data)\n        this.setState({ books: cleanData })\n      })\n\n  }\n\n  handleSearch = (e) => {\n    //  console.log(e.target.value);\n    this.setState({ searchField: e.target.value })\n  }\n\n  handleSort = (e) => {\n    console.log(e.target.value);\n    this.setState({ sort: e.target.value })\n  }\n  cleanData = (data) => {\n    const cleanedData = data.body.items.map((book) => {\n      if (book.volumeInfo.hasOwnProperty('publishedDate') === false) {\n        book.volumeInfo['publishedDate'] = '0000';\n      }\n      else if (book.volumeInfo.hasOwnProperty('imageLinks') === false) {\n        book.volumeInfo['imageLinks'] = { thumbnail: 'https://us.123rf.com/450wm/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-stock-vector-no-image-available-icon-flat-vector.jpg?ver=6' }\n      }\n      return book;\n    })\n    return cleanedData;\n  }\n\n  render() {\n    const filteredBooks = this.state.books.sort((a, b) => {\n      if (this.state.sort === 'Newest') {\n        console.log(\"in newest\")\n        return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\n      }\n      else if (this.state.sort === 'Oldest') {\n        return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\n      }\n      return;\n    })\n    return (\n      <div>\n        <SearchArea\n          searchBook={this.searchBook}\n          handleSearch={this.handleSearch}\n          handleSort={this.handleSort}\n        />\n        <BookList books={filteredBooks} />\n      </div>\n    );\n  }\n}\n\nexport default Books;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Books from './Books';\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n      <Header />\n      <Books />\n      </div>\n    );\n  }}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}